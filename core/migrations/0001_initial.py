# Generated by Django 4.2.2 on 2023-07-16 03:25

import cloudinary.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UsuarioPersonalizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe un usuario con ese correo'}, max_length=254, unique=True)),
                ('nombre', models.CharField(max_length=50)),
                ('apellidos', models.CharField(max_length=50)),
                ('fecha_nacimiento', models.DateField(null=True)),
                ('direccion', models.CharField(max_length=255)),
                ('usuario_activo', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('numero_telefono', models.CharField(max_length=10, null=True)),
                ('imagen', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('tipo_usuario', models.CharField(choices=[('alumno', 'alumno'), ('maestro', 'maestro'), ('administrador', 'administrador'), ('directivo', 'directivo')], max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_carrera', models.CharField(error_messages={'unique': 'Ya existe la carrera'}, max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cuatrimestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_cuatrimestre', models.IntegerField(error_messages={'unique': 'Ya existe'}, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GradoDeEstudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grado', models.CharField(error_messages={'unique': 'Grado ya existente'}, max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('usuariopersonalizado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('departamento', models.CharField(max_length=30)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_administrador', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('core.usuariopersonalizado',),
        ),
        migrations.CreateModel(
            name='Directivo',
            fields=[
                ('usuariopersonalizado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('puesto', models.CharField(max_length=30)),
                ('is_directivo', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('core.usuariopersonalizado',),
        ),
        migrations.CreateModel(
            name='Maestro',
            fields=[
                ('usuariopersonalizado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('especialidad', models.CharField(max_length=50)),
                ('is_maestro', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('core.usuariopersonalizado',),
        ),
        migrations.CreateModel(
            name='SolicitudCredencial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_solicitud', models.DateField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('pendiente', 'pendiente'), ('aprobada', 'aprobada'), ('rechazada', 'rechazada')], max_length=20)),
                ('tipo_solicitud', models.CharField(choices=[('nueva', 'nueva'), ('reposicion', 'reposicion')], max_length=20)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FichaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_sangre', models.CharField(max_length=3)),
                ('alergias', models.CharField(default='', max_length=300)),
                ('enfermedades_cronicas', models.CharField(default='', max_length=255)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ficha_medica_relacionada', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Credencial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado_credencial', models.CharField(choices=[('activa', 'activa'), ('inactiva', 'inactiva')], default='inactiva', max_length=10)),
                ('clave_credencial', models.CharField(max_length=36, unique=True)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='credencial_relacionada', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactoEmergencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_contacto_emergencia', models.CharField(max_length=60)),
                ('numero_contacto_emergencia', models.CharField(max_length=10)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contacto_emergencia_relacionado', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='usuariopersonalizado',
            name='contacto_emergencia',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contacto_emergencia_relacion', to='core.contactoemergencia'),
        ),
        migrations.AddField(
            model_name='usuariopersonalizado',
            name='credencial',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='credencial', to='core.credencial'),
        ),
        migrations.AddField(
            model_name='usuariopersonalizado',
            name='ficha_medica',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ficha_medica', to='core.fichamedica'),
        ),
        migrations.AddField(
            model_name='usuariopersonalizado',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuariopersonalizado',
            name='solicitud',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='solicitud_relacion', to='core.solicitudcredencial'),
        ),
        migrations.AddField(
            model_name='usuariopersonalizado',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('usuariopersonalizado_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('matricula', models.CharField(error_messages={'unique': 'Ya existe esta matricula en el sistema'}, max_length=6, unique=True)),
                ('is_alumno', models.BooleanField(default=True)),
                ('carrera', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='carrera', to='core.carrera')),
                ('cuatrimestre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cuatrimestre', to='core.cuatrimestre')),
                ('gradoDeEstudio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grado_de_estudio', to='core.gradodeestudio')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.usuariopersonalizado',),
        ),
    ]
